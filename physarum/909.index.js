"use strict";(self.webpackChunk_kkngsm_works=self.webpackChunk_kkngsm_works||[]).push([[909],{909:(e,t,n)=>{n.r(t),n.d(t,{default:()=>u});var r=n(477),s=n(474),i=n(838),a=n(318),o=n(853),l=n(590),h=n(829),d=n(413),c=n(396);class u extends class{constructor(e){this.canvas=e}resizeCanvas(e,t){const n={width:this.canvas.width,height:this.canvas.height};this.prevSize=n,this.canvas.width=e,this.canvas.height=t}fullscreen(){document.mozFullScreenElement||document.webkitCurrentFullScreenElement||document.fullscreenElement?this.canvas.cancelFullscreen?this.canvas.cancelFullscreen():document.mozCancelFullScreen?document.mozCancelFullScreen():document.webkitCancelFullScreen&&document.webkitCancelFullScreen():(this.resize(window.screen.width,window.screen.height),window.scrollTo(0,0),this.canvas.requestFullscreen?this.canvas.requestFullscreen():this.canvas.mozRequestFullScreen?this.canvas.mozRequestFullScreen():this.canvas.webkitRequestFullscreen&&this.canvas.webkitRequestFullscreen())}cancelFullscreen(){document.mozFullScreenElement||document.webkitCurrentFullScreenElement||document.fullscreenElement||this.resize(this.prevSize.width,this.prevSize.height)}isSmartPhone(){return!!window.navigator.userAgent.match(/iPhone|Android.+Mobile/)}mouseMove(e){this.canvas.addEventListener("mousemove",(t=>{const n=this.canvas.getBoundingClientRect(),s=t.clientX-n.left,i=t.clientY-n.top;e.value=new r.FM8(s/this.canvas.width,1-i/this.canvas.height)}),!0),this.canvas.addEventListener("touchmove",(t=>{t.preventDefault();const n=this.canvas.getBoundingClientRect();if(t.changedTouches[0]){const s=t.changedTouches[0].clientX-n.left,i=t.changedTouches[0].clientY-n.top;e.value=new r.FM8(s/this.canvas.width,1-i/this.canvas.height)}}),!0)}mouseClick(e){this.canvas.addEventListener("mousedown",(()=>{e.value=1}),!0),this.canvas.addEventListener("touchstart",(()=>{e.value=1}),!0),this.canvas.addEventListener("mouseup",(()=>{e.value=0}),!0),this.canvas.addEventListener("touchend",(()=>{e.value=0}),!0)}}{constructor(e){super(e),this.renderer=new r.CP7({canvas:e}),this.scene=new r.xsS,this.renderer.getContext().getExtension("EXT_color_buffer_float"),this.camera=new r.iKG(-.5,.5,.5,-.5,-1e4,1e4),this.camera.position.z=100,this.scene.add(this.camera);let t=512;this.uniforms={resolution:{type:"f",value:t},screenWidth:{type:"f",value:void 0},screenHeight:{type:"f",value:void 0},time:{type:"f",value:0},mouse:{type:"v2",value:new r.FM8(-10,-10)},mousePress:{type:"f",value:1},dataTex:{type:"t",value:void 0},drawTex:{type:"t",value:void 0},diffuseTex:{type:"t",value:void 0},prevDiffuseTex:{type:"t",value:void 0},logoTex:{type:"t",value:new r.ROQ(this.logoTex())},theta:{type:"f",value:.1},dist:{type:"f",value:5}},this.mouseMove(this.uniforms.mouse),this.mouseClick(this.uniforms.mousePress);const n=new r._12(1,1);this.mesh=new r.Kj0(n,void 0),this.scene.add(this.mesh);this.DataTex=new r.dd2(t,t,{minFilter:r.TyD,magFilter:r.TyD,wrapS:r.rpg,wrapT:r.rpg,format:r.wk1,type:r.VzW}),this.DataTex2=new r.dd2(t,t,{minFilter:r.TyD,magFilter:r.TyD,wrapS:r.rpg,wrapT:r.rpg,format:r.wk1,type:r.VzW});const u=new Float32Array(1048576).map((()=>Math.random()));this.DataTex.texture=new r.IEO(u,t,t,r.wk1,r.VzW),this.DataTex.texture.needsUpdate=!0;{this.Particles=new r.u9r;const e=new Float32Array(786432),t=new Float32Array(262144).map(((e,t)=>t));this.Particles.setAttribute("position",new r.a$l(e,3)),this.Particles.setAttribute("index",new r.a$l(t,1))}{const e=new r.jyz({uniforms:this.uniforms,vertexShader:i,fragmentShader:s,glslVersion:r.LSk}),t=new r.woe(this.Particles,e);this.DrawScene=new r.xsS,this.DrawScene.add(t)}this.moveMat=new r.jyz({uniforms:this.uniforms,vertexShader:o,fragmentShader:a,glslVersion:r.LSk}),this.swap=!0,this.uniforms.dataTex.value=this.DataTex.texture,this.diffuseMat=new r.jyz({uniforms:this.uniforms,vertexShader:l,fragmentShader:h,glslVersion:r.LSk}),this.texMat=new r.jyz({uniforms:this.uniforms,vertexShader:d,fragmentShader:c,glslVersion:r.LSk}),this.resize(this.canvas.clientWidth,this.canvas.clientHeight)}static async build(e){return new u(e)}render(e){this.uniforms.time.value=e,this.renderDraw(),this.renderMove(),this.renderDiffuse(),this.swap=!this.swap,this.mesh.material=this.texMat,this.renderer.setRenderTarget(null),this.renderer.clear(),this.renderer.render(this.scene,this.camera),this.requestId=requestAnimationFrame((e=>this.render(e)))}renderDraw(){this.renderer.setRenderTarget(this.drawTex),this.renderer.clear(),this.renderer.render(this.DrawScene,this.camera),this.uniforms.drawTex.value=this.drawTex.texture}renderMove(){this.mesh.material=this.moveMat,this.swap?(this.renderer.setRenderTarget(this.DataTex2),this.renderer.clear(),this.renderer.render(this.scene,this.camera),this.uniforms.dataTex.value=this.DataTex2.texture):(this.renderer.setRenderTarget(this.DataTex),this.renderer.clear(),this.renderer.render(this.scene,this.camera),this.uniforms.dataTex.value=this.DataTex.texture)}renderDiffuse(){this.mesh.material=this.diffuseMat,this.swap?(this.renderer.setRenderTarget(this.diffuseTex),this.renderer.clear(),this.renderer.render(this.scene,this.camera),this.uniforms.diffuseTex.value=this.diffuseTex.texture,this.uniforms.prevDiffuseTex.value=this.diffuseTex.texture):(this.renderer.setRenderTarget(this.diffuseTex2),this.renderer.clear(),this.renderer.render(this.scene,this.camera),this.uniforms.diffuseTex.value=this.diffuseTex2.texture,this.uniforms.prevDiffuseTex.value=this.diffuseTex2.texture)}resize(e,t){this.resizeCanvas(e,t),this.renderer.setSize(e,t),this.drawTex=new r.dd2(e,t,{minFilter:r.wem,magFilter:r.wem,wrapS:r.rpg,wrapT:r.rpg,format:r.wk1}),this.diffuseTex=new r.dd2(e,t,{minFilter:r.wem,magFilter:r.wem,wrapS:r.rpg,wrapT:r.rpg,format:r.wk1}),this.diffuseTex2=new r.dd2(e,t,{minFilter:r.wem,magFilter:r.wem,wrapS:r.rpg,wrapT:r.rpg,format:r.wk1}),this.uniforms.screenWidth.value=e,this.uniforms.screenHeight.value=t}remove(){cancelAnimationFrame(this.requestId)}logoTex(){const e=document.createElement("canvas");e.width=256,e.height=256;const t=e.getContext("2d");return t.fillStyle="#FFF",t.fillRect(0,0,e.width,e.height),t.fillStyle="#000",t.textAlign="center",t.textBaseline="middle",t.font="900 55px 'Yu Gothic'",t.fillText("KOKI.one",e.width/2,e.height/2),e}}},829:e=>{e.exports="in vec2 fragCoord;\nprecision highp float;\nlayout (location = 0) out vec4 fragColor;\nuniform sampler2D drawTex;\nuniform float screenWidth;\nuniform float screenHeight;\nuniform sampler2D logoTex;\nuniform sampler2D prevDiffuseTex;\n\nuniform vec2 mouse;\nvoid main() {\n    vec2 uv = vec2(screenWidth, screenHeight);\n    vec2 texel = 1./uv;\n    float r = (texture(drawTex, fragCoord).x +\n    texture(drawTex, fragCoord + vec2(texel.x, 0)).x +\n    texture(drawTex, fragCoord + vec2(0, texel.y)).x +\n    texture(drawTex, fragCoord - vec2(texel.x, 0)).x +\n    texture(drawTex, fragCoord - vec2(0, texel.y)).x)*0.2;\n\n    r = (r + texture(prevDiffuseTex, fragCoord).w)*0.5;\n\n    vec2 p = (fragCoord-0.5) * uv/ min(screenWidth, screenHeight);\n    float g = texture(logoTex, p+0.5).x;\n\n    vec2 m = (mouse-0.5) * uv/ min(screenWidth, screenHeight);\n    float b = smoothstep(0.2, 0.1, distance(m, p));\n    fragColor = vec4(r+b+1.-g,g,b,r);\n}"},590:e=>{e.exports="out vec2 fragCoord;\nvoid main(){\n    fragCoord = uv;\n    gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.0);\n}"},474:e=>{e.exports="\nprecision highp float;\nlayout (location = 0) out vec4 fragColor;\nvoid main() {\nfragColor.xyz = vec3(.4);\nfragColor.w = 1.;\n}"},838:e=>{e.exports="in float angle;\nin float index;\n\nuniform sampler2D dataTex;\nuniform float resolution;\n\nvoid main(){\n    float frag = 1.0 / resolution;\n    vec2 p = vec2(\n        mod(index, resolution) / resolution,\n        floor(index / resolution) / resolution\n    );\n    vec3 data = texture(dataTex, p).xyz;\n    gl_PointSize = 2.;\n    gl_Position = projectionMatrix * modelViewMatrix * vec4(data.xy-.5, 0, 1);\n}"},318:e=>{e.exports="precision highp float;\nin vec2 fragCoord;\nlayout (location = 0) out vec4 fragColor;\nuniform sampler2D dataTex;\nuniform sampler2D drawTex;\nuniform sampler2D diffuseTex;\nuniform float time;\nuniform float screenWidth;\nuniform float screenHeight;\nuniform float theta;\nuniform float dist;\n\nconst float PI2 = 6.283185307;\n\nfloat random() {\n    return fract(sin(dot(vec3(fragCoord, time), vec3(12.9898,78.233,174.012)))* 43758.5453123);\n}\n\nvec2 get_sense_pos(vec2 pos, float angle, float theta, vec2 dist){\n    angle = (angle+theta)*PI2;\n    return pos + vec2(sin(angle), cos(angle))*dist;\n}\n\nvoid main() {\n    vec3 data = texture(dataTex, fragCoord).xyz;\n    vec2 pos = data.xy;\n    float angle = data.z;\n    vec2 texel = 1./vec2(screenWidth, screenHeight);\n    vec2 t_d = texel * dist;\n\n    vec2 r_pos = get_sense_pos(pos, angle, theta, t_d);\n    vec2 f_pos = get_sense_pos(pos, angle, 0., t_d);\n    vec2 l_pos = get_sense_pos(pos, angle, -theta, t_d);\n\n    float r = texture(diffuseTex, r_pos).x;\n    float f = texture(diffuseTex, f_pos).x;\n    float l = texture(diffuseTex, l_pos).x;\n\n    if(l > f && f < r){\n        angle += (step(0.5, random())-0.5)*2.*theta;\n    }else if(l > f && l > r){\n        angle += 1. - theta;\n    }else if(l < r && f < r){\n        angle += theta;\n    }\n\n    pos += vec2(sin(angle*PI2), cos(angle*PI2))*texel*2.;\n    fragColor.xyz = fract(vec3(pos,angle)+1.);\n    fragColor.w = 1.;\n}"},853:e=>{e.exports="out vec2 fragCoord;\nvoid main(){\n    fragCoord = uv;\n    gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.0);\n}"},396:e=>{e.exports="in vec2 fragCoord;\nprecision highp float;\nlayout (location = 0) out vec4 fragColor;\nuniform sampler2D diffuseTex;\nvoid main() {\n    fragColor.xyz = 1.-vec3(texture(diffuseTex, fragCoord).w);\n    fragColor.w = 1.;\n}"},413:e=>{e.exports="out vec2 fragCoord;\nvoid main(){\n    fragCoord = uv;\n    gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.0);\n}"}}]);