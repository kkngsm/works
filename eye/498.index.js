"use strict";(self.webpackChunk_kkngsm_works=self.webpackChunk_kkngsm_works||[]).push([[498],{498:(e,t,n)=>{n.r(t),n.d(t,{default:()=>w});var a=n(477),s=n(217),r=n(768),i=n(37);class o{constructor(){this.camera=new a.iKG(-.5,.5,.5,-.5,-1e4,1e4),this.camera.position.z=100,this.result=new a.dd2(512,512,{minFilter:a.wem,magFilter:a.wem,wrapS:a.rpg,wrapT:a.rpg,format:a.wk1});const e=new Float32Array(786432),t=new Float32Array(262144).map(((e,t)=>t)),n=new a.u9r;n.setAttribute("position",new a.a$l(e,3)),n.setAttribute("index",new a.a$l(t,1)),this.uniforms={resolution:new a.xWb(512),dataTex:{type:"t",value:void 0},drawTex:{type:"t",value:void 0}};const s=new a.jyz({uniforms:this.uniforms,vertexShader:r,fragmentShader:i,glslVersion:a.LSk,transparent:!0}),o=new a.woe(n,s);this.scene=new a.xsS,this.scene.add(o)}render(e,t){return this.uniforms.dataTex.value=t,e.setRenderTarget(this.result),e.clear(),e.render(this.scene,this.camera),this.result.texture}}var l=n(59),c=n(685);class d{constructor(){this.camera=new a.iKG(-.5,.5,.5,-.5,-1e4,1e4);const e=512,t=[...Array(262144)].map((()=>{const e=.5*Math.random(),t=Math.random()*Math.PI*2;return[Math.sin(t)*e+.5,Math.cos(t)*e+.5,Math.random(),0]})).flat(),n=new a.IEO(Float32Array.from(t),e,e,a.wk1,a.VzW);n.needsUpdate=!0,this.uniforms={resolution:new a.xWb(e),dataTex:new a.xWb(n),drawTex:{type:"t",value:void 0}};const s=new a._12(1,1),r=new a.FIo({uniforms:this.uniforms,vertexShader:l,fragmentShader:c,glslVersion:a.LSk});this.mesh=new a.Kj0(s,r),this.scene=new a.xsS,this.scene.add(this.mesh),this.data=[new a.dd2(e,e,{minFilter:a.TyD,magFilter:a.TyD,wrapS:a.rpg,wrapT:a.rpg,format:a.wk1,type:a.VzW}),new a.dd2(e,e,{minFilter:a.TyD,magFilter:a.TyD,wrapS:a.rpg,wrapT:a.rpg,format:a.wk1,type:a.VzW})],this.dataIndex=0}render(e,t){return this.uniforms.drawTex.value=t,this.dataIndex=(this.dataIndex+1)%2,e.setRenderTarget(this.data[this.dataIndex]),e.clear(),e.render(this.scene,this.camera),this.uniforms.dataTex.value=this.data[this.dataIndex].texture,this.data[this.dataIndex].texture}}class h{constructor(){this.move=new d,this.draw=new o,this.drew=this.draw.result.texture,this.moved=this.move.data[0].texture}render(e){this.draw.render(e,this.moved),this.moved=this.move.render(e,this.drew)}}var u=n(221),m=n(10);class p{constructor(){this.texture=new h,this.uniforms={tex:new a.xWb(this.texture.drew)}}static async build(){const e=new p;return await e.set(),e}update(e){this.model.position.set(20,10*Math.sin(.001*e),0)}render(e){this.texture.render(e)}async set(){const e=new s.E,t=await new Promise((t=>{e.load(m,(e=>{t(e.scene)}),(e=>{console.log(e.loaded/e.total*100+"% loaded")}),(e=>{console.error("Player gltf Model loading Error:",e)}))}));t.children[0].isMesh&&(t.children[0].material=new a.vBJ),t.children[1].isMesh&&(t.children[1].material=new a.FIo({uniforms:this.uniforms,vertexShader:l,fragmentShader:u,glslVersion:a.LSk})),this.model=t,this.model.scale.set(3,3,3)}}var v=n(365);class w extends class{constructor(e){this.canvas=e}resizeCanvas(e,t){const n={width:this.canvas.width,height:this.canvas.height};this.prevSize=n,this.canvas.width=e,this.canvas.height=t}fullscreen(){document.mozFullScreenElement||document.webkitCurrentFullScreenElement||document.fullscreenElement?this.canvas.cancelFullscreen?this.canvas.cancelFullscreen():document.mozCancelFullScreen?document.mozCancelFullScreen():document.webkitCancelFullScreen&&document.webkitCancelFullScreen():(this.resize(window.screen.width,window.screen.height),window.scrollTo(0,0),this.canvas.requestFullscreen?this.canvas.requestFullscreen():this.canvas.mozRequestFullScreen?this.canvas.mozRequestFullScreen():this.canvas.webkitRequestFullscreen&&this.canvas.webkitRequestFullscreen())}cancelFullscreen(){document.mozFullScreenElement||document.webkitCurrentFullScreenElement||document.fullscreenElement||this.resize(this.prevSize.width,this.prevSize.height)}isSmartPhone(){return!!window.navigator.userAgent.match(/iPhone|Android.+Mobile/)}mouseMove(e){this.canvas.addEventListener("mousemove",(t=>{const n=this.canvas.getBoundingClientRect(),s=t.clientX-n.left,r=t.clientY-n.top;e.value=new a.FM8(s/this.canvas.width,1-r/this.canvas.height)}),!0),this.canvas.addEventListener("touchmove",(t=>{t.preventDefault();const n=this.canvas.getBoundingClientRect();if(t.changedTouches[0]){const s=t.changedTouches[0].clientX-n.left,r=t.changedTouches[0].clientY-n.top;e.value=new a.FM8(s/this.canvas.width,1-r/this.canvas.height)}}),!0)}mouseClick(e){this.canvas.addEventListener("mousedown",(()=>{e.value=1}),!0),this.canvas.addEventListener("touchstart",(()=>{e.value=1}),!0),this.canvas.addEventListener("mouseup",(()=>{e.value=0}),!0),this.canvas.addEventListener("touchend",(()=>{e.value=0}),!0)}}{constructor(e){super(e),this.renderer=new a.CP7({canvas:e}),this.scene=new a.xsS;const t=e.clientWidth/e.clientHeight;this.camera=new a.cPb(45,t,1,1e4),this.camera.position.set(10,0,50),this.camera.lookAt(new a.Pa4(0,0,0)),this.contorler=new v.z(this.camera,e),this.resize(e.clientWidth,e.clientHeight)}static async build(e){const t=new w(e);return await t.set(),t}resize(e,t){this.resizeCanvas(e,t),this.renderer.setSize(e,t),this.camera.aspect=e/t,this.camera.updateProjectionMatrix()}render(e){this.contorler.update(),this.enemy.render(this.renderer),this.renderer.setRenderTarget(null),this.renderer.clear(),this.renderer.render(this.scene,this.camera),this.requestId=requestAnimationFrame((e=>this.render(e)))}async set(){this.enemy=await p.build(),this.scene.add(this.enemy.model)}remove(){cancelAnimationFrame(this.requestId)}}},10:(e,t,n)=>{e.exports=n.p+"assets/e0ba4371befcadc2a200"},685:e=>{e.exports="precision highp float;\nin vec2 fragCoord;\nlayout (location = 0) out vec4 fragColor;\nuniform sampler2D dataTex;\nuniform sampler2D drawTex;\nuniform float time;\nuniform float resolution;\nconst float PI = 3.141592653;\nconst float PI2 = 6.283185307;\n\nconst float spmTheta = 0.78/PI*0.5;\nconst float spmDist = 2.1;\nconst float spmSpeed = 0.1;\nconst float dpmTheta = 0.2/PI*0.5;\nconst float dpmDist = 1.;\nconst float dpmSpeed = 0.5;\nconst float pupilRadius = 0.1;\nconst float dpmRadius = 0.07;\nconst float inwardForce = 0.5;\nfloat random(float seed) {\n    return fract(sin(dot(vec3(fragCoord, time+seed), vec3(12.9898,78.233,174.012)))* 43758.5453123);\n}\n// 新規データの作成\nvec3 respown(){\n    float angle = random(-200.24)*PI2;\n    vec2 pos = vec2(sin(angle)*0.5 + 0.5, cos(angle)*0.5 + 0.5);\n    return vec3(pos, atan(0.5 - pos.x, 0.5 - pos.y)/PI2);\n}\n// センサーの位置を取得\nvec2 get_sense_pos(vec2 pos, float angle, float spmTheta, vec2 spmDist){\n    angle = (angle+spmTheta)*PI2;\n    return pos + vec2(sin(angle), cos(angle))*spmDist;\n}\nvoid main() {\n    vec2 texel = vec2(1./resolution);\n    vec3 data = texture(dataTex, fragCoord).xyz;\n    vec2 pos = data.xy;\n    float angle = data.z;\n\n    float d = distance(vec2(0.5,0.5), pos);\n\n    // spmとdpmのパラメータ遷移のための重みづけ\n    float weight = smoothstep(pupilRadius+dpmRadius-0.05, pupilRadius+dpmRadius+0.05,d);\n    vec2 t_d = texel * mix(spmDist, dpmDist, weight);\n    float theta = mix(spmTheta, dpmTheta, weight);\n    // センサー座標を取得\n    vec2 r_pos = get_sense_pos(pos, angle, theta, t_d);\n    vec2 f_pos = get_sense_pos(pos, angle, 0., t_d);\n    vec2 l_pos = get_sense_pos(pos, angle, -theta, t_d);\n    float r = texture(drawTex,r_pos).x;\n    float f = texture(drawTex,f_pos).x;\n    float l = texture(drawTex,l_pos).x;\n\n    // 移動先の決定\n    if(l > f && f < r){\n        angle += (step(0.5, random(0.))-0.5)*2.*theta;\n    }else if(l > f && l > r){\n        angle += 1. - theta;\n    }else if(l < r && f < r){\n        angle += theta;\n    }\n    pos += vec2(sin(angle*PI2), cos(angle*PI2))*texel*mix(spmSpeed, dpmSpeed, weight);\n    // spmのとき中央へ向かせる\n    float x = mix(sin(angle*PI2), 0.5 - pos.x, inwardForce);\n    float y = mix(cos(angle*PI2), 0.5 - pos.y, inwardForce);\n    angle = mix(angle, atan(x, y)/PI2, step(pupilRadius+dpmRadius,d));\n    // 0-1のデータに直す\n    data = fract(vec3(pos,angle)+1.);\n    // 一定の条件のもとリスポーンさせる\n    vec3 re_data = respown();\n    data = mix(re_data, data, step(pupilRadius, d));\n    data = mix(data, re_data, 1.-step(d, 0.501));\n    data = mix(data, re_data, step(0.9915, random(data.x)));\n\n    fragColor.xyz = data;\n    fragColor.w = 1.;\n}"},37:e=>{e.exports="precision highp float;\nlayout (location = 0) out vec4 fragColor;\nvoid main() {\n  fragColor.xyz = vec3(1.);\n  fragColor.w = 1.;\n}"},768:e=>{e.exports="in float index;\nuniform sampler2D dataTex;\nuniform float resolution;\nvoid main(){\n    float frag = 1.0 / resolution;\n    vec2 p = vec2(\n        mod(index, resolution) / resolution,\n        floor(index / resolution) / resolution\n    );\n    vec3 data = texture(dataTex, p).xyz;\n    gl_PointSize = 2.0;\n    gl_Position = projectionMatrix * modelViewMatrix * vec4(data.xy-.5, 0, 1);\n}"},221:e=>{e.exports="precision highp float;\nprecision highp int;\nin vec3 vNormal;\nin vec2 fragCoord;\nlayout (location = 0) out vec4 fragColor;\nuniform sampler2D tex;\nuniform vec3 cameraPos;\n\nvoid main(){\n  fragColor = texture(tex, fragCoord);\n}\n"},59:e=>{e.exports="uniform mat4 modelViewMatrix;\nuniform mat4 projectionMatrix;\nin vec2 uv;\nin vec3 position;\nin vec3 normal;\nout vec2 fragCoord;\nout vec3 vNormal;\nvoid main()\n{\n    fragCoord = uv;\n    gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.0);\n    vNormal = normal;\n}"}}]);