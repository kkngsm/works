"use strict";(self.webpackChunk_kkngsm_works=self.webpackChunk_kkngsm_works||[]).push([[499],{499:(e,t,n)=>{n.r(t),n.d(t,{default:()=>l});var r=n(376),i=n(477),o=n(473),s=n(677),a=n(127),c=n(168);class l extends class{constructor(e){this.canvas=e}resizeCanvas(e,t){const n={width:this.canvas.width,height:this.canvas.height};this.prevSize=n,this.canvas.width=e,this.canvas.height=t}fullscreen(){document.mozFullScreenElement||document.webkitCurrentFullScreenElement||document.fullscreenElement?this.canvas.cancelFullscreen?this.canvas.cancelFullscreen():document.mozCancelFullScreen?document.mozCancelFullScreen():document.webkitCancelFullScreen&&document.webkitCancelFullScreen():(this.resize(window.screen.width,window.screen.height),window.scrollTo(0,0),this.canvas.requestFullscreen?this.canvas.requestFullscreen():this.canvas.mozRequestFullScreen?this.canvas.mozRequestFullScreen():this.canvas.webkitRequestFullscreen&&this.canvas.webkitRequestFullscreen())}cancelFullscreen(){document.mozFullScreenElement||document.webkitCurrentFullScreenElement||document.fullscreenElement||this.resize(this.prevSize.width,this.prevSize.height)}isSmartPhone(){return!!window.navigator.userAgent.match(/iPhone|Android.+Mobile/)}mouseMove(e){this.canvas.addEventListener("mousemove",(t=>{const n=this.canvas.getBoundingClientRect(),r=t.clientX-n.left,o=t.clientY-n.top;e.value=new i.FM8(r/this.canvas.width,1-o/this.canvas.height)}),!0),this.canvas.addEventListener("touchmove",(t=>{t.preventDefault();const n=this.canvas.getBoundingClientRect();if(t.changedTouches[0]){const r=t.changedTouches[0].clientX-n.left,o=t.changedTouches[0].clientY-n.top;e.value=new i.FM8(r/this.canvas.width,1-o/this.canvas.height)}}),!0)}mouseClick(e){this.canvas.addEventListener("mousedown",(()=>{e.value=1}),!0),this.canvas.addEventListener("touchstart",(()=>{e.value=1}),!0),this.canvas.addEventListener("mouseup",(()=>{e.value=0}),!0),this.canvas.addEventListener("touchend",(()=>{e.value=0}),!0)}}{constructor(e){super(e),this.renderer=new i.CP7({canvas:e}),this.scene=new i.xsS,this.guiParam=this.addGUI(),this.camera=new i.iKG(-.5,.5,.5,-.5,-1e4,1e4),this.camera.position.z=100,this.scene.add(this.camera),this.uniforms={screenWidth:{type:"f",value:void 0},screenHeight:{type:"f",value:void 0},previous:{type:"t",value:void 0},time:{type:"f",value:0},strength:{type:"f",value:1},color:{type:"v3",value:new i.Pa4(1,1,1)},bgColor:{type:"v3",value:new i.Pa4(0,0,0)},random:{type:"f",value:0}},this.initMat=new i.jyz({uniforms:this.uniforms,vertexShader:o,fragmentShader:s,glslVersion:i.LSk}),this.diffusionMat=new i.jyz({uniforms:this.uniforms,vertexShader:o,fragmentShader:a,glslVersion:i.LSk}),this.displayMat=new i.jyz({uniforms:this.uniforms,vertexShader:o,fragmentShader:c,glslVersion:i.LSk});const t=new i._12(1,1);this.mesh=new i.Kj0(t,this.initMat),this.scene.add(this.mesh),this.resize(this.canvas.clientWidth,this.canvas.clientHeight)}static async build(e){return new l(e)}resize(e,t){if(this.isSmartPhone())return;this.resizeCanvas(e,t),this.renderer.setSize(e,t),this.wrt=[new i.dd2(e,t,{minFilter:i.wem,magFilter:i.wem,format:i.wk1,type:i.ywz}),new i.dd2(e,t,{minFilter:i.wem,magFilter:i.wem,format:i.wk1,type:i.ywz})],this.uniforms.screenWidth.value=e,this.uniforms.screenHeight.value=t,this.mesh.material=this.initMat,this.renderer.setRenderTarget(this.wrt[0]),this.renderer.clear(),this.renderer.render(this.scene,this.camera);const n=this.canvas.width*this.guiParam.loops*.005;this.mesh.material=this.diffusionMat;for(let e=0;e<n;e++)this.uniforms.previous.value=this.wrt[0].texture,this.uniforms.random.value=Math.random(),this.renderer.setRenderTarget(this.wrt[1]),this.renderer.clear(),this.renderer.render(this.scene,this.camera),this.uniforms.previous.value=this.wrt[1].texture,this.uniforms.random.value=Math.random(),this.renderer.setRenderTarget(this.wrt[0]),this.renderer.clear(),this.renderer.render(this.scene,this.camera);const r=new Uint8Array(this.canvas.width*this.canvas.height*4);this.renderer.readRenderTargetPixels(this.wrt[0],0,0,this.canvas.width,this.canvas.height,r);const o=new i.IEO(((e,t,n)=>{const r=(e,n)=>e+n*t,i=new Uint8Array(t*n*4);for(let o=1;o<n-1;o++)for(let n=1;n<t-1;n++)if(255===e[4*r(n,o)]&&0!==e[4*r(n+1,o)+1]&&0!==e[4*r(n,o+1)+2]&&2!==e[4*r(n-1,o)+1]&&2!==e[4*r(n,o-1)+2]){i[4*r(n,o)]=1;let t=[n+e[4*r(n,o)+1]-1,o+e[4*r(n,o)+2]-1],s=1;for(;i[4*r(t[0],t[1])]<s&&(1!==e[4*r(t[0],t[1])+1]||1!==e[4*r(t[0],t[1])+2]);){const n=4*r(t[0],t[1]);s<256?i[n]=s:s<512?(i[n]=255,i[n+1]=s-256):s<768?(i[n]=255,i[n+1]=255,i[n+2]=s-512):s<1024?(i[n]=255,i[n+1]=255,i[n+2]=255,i[n+3]=s-1024):s<1280?(i[n]=255,i[n+1]=255,i[n+2]=255,i[n+3]=255,i[n+3]=s-1024):(i[n]=255,i[n+1]=255,i[n+2]=255,i[n+3]=255,i[n+3]=255),s++,t[0]+=e[n+1]-1,t[1]+=e[n+2]-1}}return i})(r,e,t),this.canvas.width,this.canvas.height,i.wk1,i.ywz);o.needsUpdate=!0,this.uniforms.previous.value=o}render(e){this.isSmartPhone()||(this.uniforms.color.value.x=this.guiParam.color[0]/255,this.uniforms.color.value.y=this.guiParam.color[1]/255,this.uniforms.color.value.z=this.guiParam.color[2]/255,this.uniforms.bgColor.value.x=this.guiParam.bgColor[0]/255,this.uniforms.bgColor.value.y=this.guiParam.bgColor[1]/255,this.uniforms.bgColor.value.z=this.guiParam.bgColor[2]/255,this.uniforms.strength.value=this.guiParam.strength,this.uniforms.time.value=.001*e,this.mesh.material=this.displayMat,this.renderer.setRenderTarget(null),this.renderer.clear(),this.renderer.render(this.scene,this.camera),this.requestId=requestAnimationFrame((e=>this.render(e))))}addGUI(){const e={recalculation:()=>{this.resize(this.canvas.width,this.canvas.height)},loops:100,strength:1,color:[0,0,255],bgColor:[0,0,0]};this.gui=new r.XS;const t=this.gui.addFolder("CALCULATION");t.add(e,"loops",0,100).name("Number of loops (%)"),t.add(e,"recalculation").name("recalculation (click here)");const n=this.gui.addFolder("SHADING");return n.add(e,"strength",.1,5),n.addColor(e,"color"),n.addColor(e,"bgColor").name("background color"),this.gui.open(),e}remove(){cancelAnimationFrame(this.requestId),this.gui&&this.gui.destroy()}}},473:e=>{e.exports="out vec2 fragCoord;\nvoid main()\n{\n    fragCoord = uv;\n    gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.0);\n}"},127:e=>{e.exports="in vec2 fragCoord;\nlayout (location = 0) out vec4 fragColor;\nuniform float screenWidth;\nuniform float screenHeight;\nuniform sampler2D previous;\nuniform float random;\n// Noise func Reference: https://www.shadertoy.com/view/4dS3Wd\nfloat hash(vec2 p) {vec3 p3 = fract(vec3(p.xyx) * 0.13); p3 += dot(p3, p3.yzx + 3.333); return fract((p3.x + p3.y) * p3.z); }\n#define NUM_NOISE_OCTAVES 5\nfloat noise(vec2 x) {\n    vec2 i = floor(x);\n    vec2 f = fract(x);\n    // Four corners in 2D of a tile\n    float a = hash(i);\n    float b = hash(i + vec2(1.0, 0.0));\n    float c = hash(i + vec2(0.0, 1.0));\n    float d = hash(i + vec2(1.0, 1.0));\n    // Simple 2D lerp using smoothstep envelope between the values.\n    // return vec3(mix(mix(a, b, smoothstep(0.0, 1.0, f.x)),\n    //\t\t\tmix(c, d, smoothstep(0.0, 1.0, f.x)),\n    //\t\t\tsmoothstep(0.0, 1.0, f.y)));\n    // Same code, with the clamps in smoothstep and common subexpressions\n    // optimized away.\n    vec2 u = f * f * (3.0 - 2.0 * f);\n    return mix(a, b, u.x) + (c - a) * u.y * (1.0 - u.x) + (d - b) * u.x * u.y;\n}\nfloat fbm(vec2 x) {\n    float v = 0.0;\n    float a = 0.5;\n    vec2 shift = vec2(100);\n    // Rotate to reduce axial bias\n    mat2 rot = mat2(cos(0.5), sin(0.5), -sin(0.5), cos(0.50));\n    for (int i = 0; i < NUM_NOISE_OCTAVES; ++i) {\n            v += a * noise(x);\n        x = rot * x * 2.0 + shift;\n        a *= 0.5;\n    }\n    return v;\n}\n#define UP (0.00784313)/*2*/\n#define HERE (0.00392156)/*1*/\n#define DOWN (0) /*0*/\n// #define UP 1\n// #define HERE 0.5\n// #define DOWN 0\nvoid main() {\n    vec2 resolution = vec2(screenWidth, screenHeight);\n    vec2 pixelSize = 1./resolution;\n    vec2 pSX = vec2(pixelSize.x, 0);\n    vec2 pSY = vec2(0, pixelSize.y);\n    /*\n      u\n    l   r\n      d\n    */\n    float potentialU = texture(previous, fragCoord - pSY).x;\n    float potentialR = texture(previous, fragCoord + pSX).x;\n    float potentialL = texture(previous, fragCoord - pSX).x;\n    float potentialD = texture(previous, fragCoord + pSY).x;\n    /* 上にあったら */\n    /* potentialU?vec3(1, HERE, DOWN):vec3(0) */\n    vec3 p_from = mix(vec3(0), vec3(1, HERE, DOWN), potentialU);\n    /* 右にあったら */\n    /* potentialR?vec3(1, UP, HERE):p_from */\n    p_from = mix(p_from, vec3(1, UP , HERE), potentialR);\n    /* 左にあったら */\n    /* potentialL?vec3(1, DOWN, HERE):p_from */\n    p_from = mix(p_from, vec3(1, DOWN, HERE), potentialL);\n    /* 下にあったら */\n    /* potentialD?vec3(1, HERE, UP):p_from */\n    p_from = mix(p_from, vec3(1, HERE, UP), potentialD);\n    /* 確率 */\n    p_from = mix(vec3(0), p_from, step(hash((fragCoord+random)*resolution), fbm(fragCoord*resolution*0.03)));\n    /* すでに計算してたら */\n    /* texture(previous, fragCoord).x?texture(previous, fragCoord).yz:p_from */\n    p_from = mix(p_from, texture(previous, fragCoord).xyz, texture(previous, fragCoord).x);\n    /* 縁じゃなかったら */\n    vec2 p1 = step(pixelSize,fragCoord);\n    vec2 p2 = step(pixelSize,1.0 - fragCoord);\n    float c1 = p1.x * p1.y;\n    float c2 = p2.x * p2.y;\n    p_from = mix(vec3(0), p_from, c1 * c2);\n    fragColor.xyz = p_from;\n    fragColor.w = 1.;\n}"},168:e=>{e.exports="in vec2 fragCoord;\nlayout (location = 0) out vec4 fragColor;\nuniform sampler2D previous;\nuniform float strength;\nuniform vec3 color;\nuniform vec3 bgColor;\nvoid main() {\n    vec4 num = texture(previous, fragCoord);\n    fragColor.xyz = vec3(mix(bgColor, color, min(1., (num.x+num.x+num.z+num.w)/strength)));\n    fragColor.w = 1.;\n}"},677:e=>{e.exports="in vec2 fragCoord;\nlayout (location = 0) out vec4 fragColor;\nuniform float screenWidth;\nuniform float screenHeight;\n#define HERE (0.00392156)/*1*/\n\nvoid main() {\n    vec2 resolution = vec2(screenWidth, screenHeight);\n    mediump float pixelSize = 1./min(resolution.x,resolution.y);\n    vec2 temp = fragCoord * 2. - 1.;\n    vec2 uv = vec2(temp.x * resolution.x,temp.y * resolution.y)/min(resolution.x,resolution.y);\n    float col = step(length(uv), pixelSize*1.5);\n    fragColor.xyz = vec3(col, HERE, HERE);\n    fragColor.w = 0.;\n}"}}]);